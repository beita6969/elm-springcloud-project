# spring
server.servlet.contextPath=/nacos
server.error.include-message=ALWAYS
server.port=8848

# nacos dev env
spring.profiles.active=standalone
nacos.standalone=true

# database
### If using MySQL as the datasource:
### Uncomment the following configurations and configure accordingly:
# spring.datasource.platform=mysql
# db.num=1
# db.url.0=jdbc:mysql://127.0.0.1:3306/nacos?characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=UTC
# db.user=nacos
# db.password=nacos

### Connection pool configuration: hikariCP
db.pool.config.driverClassName=com.mysql.cj.jdbc.Driver
db.pool.config.connectionTimeout=30000
db.pool.config.validationTimeout=10000
db.pool.config.maximumPoolSize=20
db.pool.config.minimumIdle=2

# nacos.cmdb.dumpTaskInterval=3600
# nacos.cmdb.eventTaskInterval=10
# nacos.cmdb.labelTaskInterval=300
# nacos.cmdb.loadDataAtStart=false

# metrics for prometheus
management.endpoints.web.exposure.include=*

# metrics for elastic search
management.metrics.export.elastic.enabled=false
# management.metrics.export.elastic.host=http://localhost:9200

# metrics for influx
management.metrics.export.influx.enabled=false
# management.metrics.export.influx.db=springboot
# management.metrics.export.influx.uri=http://localhost:8086
# management.metrics.export.influx.auto-create-db=true
# management.metrics.export.influx.consistency=one
# management.metrics.export.influx.compressed=true

### If turn on auth system:
nacos.core.auth.enabled=false
### Turn on/off caching of auth information. By turning on this switch, the update of auth information would have a 15 seconds delay.
nacos.core.auth.caching.enabled=false

### Since 1.4.1, worked when nacos.core.auth.enabled=true and nacos.core.auth.enable.userAgentAuthWhite=false
### The two properties is the white list for auth and used by identity the request from other server.
nacos.core.auth.server.identity.key=serverIdentity
nacos.core.auth.server.identity.value=security

### The default token (Base64 string):
nacos.core.auth.default.token.secret.key=SecretKey012345678901234567890123456789012345678901234567890123456789

### worked when nacos.core.auth.enabled=true
### The token expiration in seconds:
nacos.core.auth.default.token.expire.seconds=18000

### The default token:
### nacos.core.auth.plugin.nacos.token.secret.key=SecretKey012345678901234567890123456789012345678901234567890123456789

### worked when nacos.core.auth.enabled=true
### The token expiration in seconds:
### nacos.core.auth.plugin.nacos.token.expire.seconds=18000

### If turn on the system property nacos.core.auth.enable.userAgentAuthWhite=true, it means that blank user-agent is allowed to request.
nacos.core.auth.enable.userAgentAuthWhite=false

### The two properties is the white list for auth and used by identity the request from other server.
### nacos.core.auth.server.identity.key=serverIdentity
### nacos.core.auth.server.identity.value=security

nacos.istio.mcp.server.enabled=false

### Limit the request body size:
server.tomcat.basedir=/tmp/nacos

### set the cache type
# nacos.config.cache.type=caffeine

### The auth system to use, currently only 'nacos' and 'ldap' is supported:
# nacos.core.auth.system.type=nacos

### If turn on auth system and set type to 'ldap', you must configure the ldap server
# nacos.core.auth.ldap.url=ldap://localhost:389
# nacos.core.auth.ldap.userDn=cn=admin,dc=example,dc=com
# nacos.core.auth.ldap.password=password
# nacos.core.auth.ldap.basedc=dc=example,dc=com
# nacos.core.auth.ldap.filter=(|(uid={0})(cn={0}))

### The interval of data transmission between dump data from database to memory, in milliseconds.
### larger interval may cause data inconsistency during the switch
nacos.config.dump.dump2disk.interval=60000server.tomcat.basedir=./temp
